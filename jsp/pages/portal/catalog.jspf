<script type="text/javascript">
    THEME.breadcrums = [{
            name: 'Catalog Home',
            id: 'rootCategories'
        }];
    
    THEME.lastBreadcrum = function() {
        return THEME.breadcrums[THEME.breadcrums.length - 1];
    }
    
    THEME.refreshBreadcrumHTML = function() {
        // Build the new breadcrum HTML
        var HTML = '';
        for(var i=0; i<THEME.breadcrums.length; i++) {
            var name = THEME.breadcrums[i]['name'];
            var id = THEME.breadcrums[i]['id'];
            if (i>0) {
                HTML += '<span class="breadcrumDivider">></span>';
            }
            HTML += '<span class="breadcrum">';
            HTML += '<a class="breadcrumLink" ';
            HTML += 'data-id="' + id + '" ';
            HTML += 'href="javascript:void(0)">';
            HTML += name;
            HTML += '</a></span>';
        }
        
        // Set the HTML to the correct div element
        var breadcrumElement = document.getElementById('catalogBreadcrums');
        breadcrumElement.innerHTML = HTML;

        // Bind a click function to each of the breadcrumLink elements that shows
        // the specified element and refreshes the breadcrum html.
        var breadcrumLinks = YAHOO.util.Selector.query('#catalogBreadcrums .breadcrumLink');
        for(var i=0; i<breadcrumLinks.length; i++) {
            YAHOO.util.Event.on(breadcrumLinks[i], 'click', function() {
                // Hide the currently displayed element.  The id of the currently
                // displayed element should be stored in the most recent entry in
                // the breadcrum stack.
                var displayedElement = document.getElementById(THEME.lastBreadcrum()['id']);
                THEME.addClass(displayedElement, 'hidden');
                
                // Get the target id stored in the link that triggers this function.
                // Then retrieve and show the element.
                var targetId = this.getAttribute('data-id');
                var targetElement = document.getElementById(targetId);
                THEME.removeClass(targetElement, 'hidden');
                
                // Rebuild the breadcrums.
                // First remove elements from the breadcrums stack until we reach
                // the element that was clicked.
                while(THEME.lastBreadcrum()['id'] != targetId) {
                    THEME.breadcrums.pop();
                }
                
                THEME.refreshBreadcrumHTML();
            });
        }
    };
    
    
    THEME.onPageLoad(function() {
        var navigationLinks = YAHOO.util.Selector.query('#catalog .navigationLink');
        for(var i=0; i<navigationLinks.length; i++) {
            YAHOO.util.Event.on(navigationLinks[i], 'click', function() {
                // Hide the currently displayed element.
                var displayedElement = document.getElementById(THEME.lastBreadcrum()['id']);
                THEME.addClass(displayedElement, 'hidden');
                
                // Show the element specified by the link that triggered this function.
                var targetId = this.getAttribute('data-id');
                var targetName = this.getAttribute('data-name');
                if(targetName == undefined) {
                    targetName = this.innerHTML;
                }
                var targetElement = document.getElementById(targetId);
                THEME.removeClass(targetElement, 'hidden');
                
                // Add this navigation action to the breadcrum stack by pushing
                // the id and name of the link that triggered this function.
                THEME.breadcrums.push({
                    id: targetId,
                    name: targetName
                });
                
                // Rebuild the breadcrum HTML and insert it into the #breadcrum
                // div element.
                THEME.refreshBreadcrumHTML();
            });
        }
    });

</script>

<div id="catalog">

    <div id="catalogBreadcrums">
        <span><a class="breadcrumbLink" data-id="rootCategories" href="javascript:void(0)">Catalog Home</a></span>
    </div>

    <div id="searchBoxContainer" class="hidden">
        <input id="searchBox" type="text" name="search"/>
    </div>
    <div id="searchContent" style="padding-top: 5px;" class="hidden">
        <div id="searchLoadDisplay" style="font-size: 2em; font-weight: bold; text-align: center;margin-top: 4em;">
            Searching for "<span id="searchLoadDisplayQuery"></span>"... <img alt="Loading Indicator" src="resources/loading.gif">
        </div>
        <div id="searchResultsDisplay"></div>
    </div>

    <div class="" id="rootCategories">
        <% for (Category category : catalog.getRootCategories(context)) {%>
        <div class="rootCategory navigationLink" data-id="<%= category.getId()%>" data-name="<%= category.getName()%>">
            <div class="name"><%= category.getName()%></div>
            <div class="image">
                <img src="<%=ThemeConfig.get("root")%>/images/favorites32x32.png"/>
            </div>
            <div class="description"><%= category.getDescription()%></div>
        </div>
        <% }%>
        <div class="clear"></div>
    </div>

    <% for (Category category : catalog.getAllCategories(context)) {%>
    <div class="category hidden" id="<%= category.getId()%>">
        <div class="header">
            <div class="name"><%= category.getName()%></div>
            <div class="description"><%= category.getDescription()%></div>
        </div>
        <div class="subcategories">
            <% for (Category subcategory : category.getSubcategories()) {%>
            <div class="subcategory">
                <div class="name">
                    <a class="navigationLink" data-id="<%= subcategory.getId()%>" data-type="category" href="javascript:void(0)"><%= subcategory.getName()%></a>
                </div>
                <div class="description">
                    <%= subcategory.getDescription()%>
                </div>
            </div>
            <% }%>
        </div>
        <div class="templates">
            <% for (Template template : category.getTemplates()) {%>
            <div class="template">
                <div class="name">
                    <a class="navigationLink" data-id="<%= template.getId()%>" data-type="template" href="javascript:void(0)"><%= template.getName()%></a>
                </div>
                <div class="description">
                    <%= template.getDescription()%>
                </div>
            </div>
            <% }%>
        </div>
        <div class="clear"></div>
        <!-- If there should be more content besides the subcategories and templates
        it should go hear after the .clear div element -->
    </div>
    <% }%>

    <% for (Template template : catalog.getTemplates(context)) {%>
    <div class="template hidden" id="<%= template.getId()%>">
        <div class="header">
            <div class="name"><%= template.getName()%></div>
        </div>
        <div class="description"><%= template.getDescription()%></div>
        <div class="link"><a href="javascript:void(0)">Request This</a></div>
    </div>
    <% }%>

</div>
