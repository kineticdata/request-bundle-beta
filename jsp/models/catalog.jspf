<%!
    public static class Catalog {
        public static final String FORM_NAME = "KS_SRV_Category";
        public static final String FIELD_APPLICATION = "700036000";
        public static final String FIELD_ID = "179";
        public static final String FIELD_NAME = "600000500";
        public static final String FIELD_STATUS = "7";
        public static final String[] FIELD_IDS = new String[] {
            FIELD_ID, FIELD_NAME
        };
        
        private SimpleEntry entry = null;
        private Category[] categories = null;
        private Template[] templates = null;
        private Map<String,Category> categoriesMap = new LinkedHashMap();

        public Catalog(SimpleEntry entry) {
            this.entry = entry;
        }

        public static Catalog findByName(HelperContext context, String name) {
            Catalog catalog = null;

            String qualification =
                "'"+FIELD_APPLICATION+"'=\"Kinetic Request\" AND "+
                "'"+FIELD_STATUS+"' = \"Active\" AND "+
                "'"+FIELD_NAME+"' = \""+name+"\"";

            SimpleEntry entry = Base.findSingle(context, FORM_NAME, qualification, FIELD_IDS);
            if (entry != null) {
                catalog = new Catalog(entry);
            }

            return catalog;
        }

        public Category[] getCategories(HelperContext context) {
            if (categories == null) {
                categories = Category.findByCatalogName(context, getName());
                for (Category category : categories) {
                    categoriesMap.put(category.getName(), category);
                }

                Template[] templates = getTemplates(context);
                for (Template template : templates) {
                    Category category = categoriesMap.get(template.getCategory());
                    category.addTemplate(template);
                }
            }
            return categories;
        }

        public Template[] getTemplates(HelperContext context) {
            if (templates == null) {
                templates = Template.findByCatalogName(context, getName());
            }
            return templates;
        }

        public String getId() {return entry.getEntryFieldValue(FIELD_ID);}
        public String getName() {return entry.getEntryFieldValue(FIELD_NAME);}

        public String toJson() {
            StringBuilder builder = new StringBuilder();
            builder.append("{");
            builder.append("id: '").append(getId()).append("'").append(",");
            builder.append("name: '").append(getName()).append("'");
            builder.append("}");
            return builder.toString();
        }
    }
%>