<%!
    public static class Category {
        public static final String FORM_NAME = "KS_RQT_ServiceItemCategory";
        public static final String FIELD_DESCRIPTION = "700401901";
        public static final String FIELD_ID = "179";
        public static final String FIELD_IMAGE_TAG = "700401930";
        public static final String FIELD_NAME = "700401900";
        public static final String FIELD_NUMBER_OF_ITEMS = "700401940";

        public static final String FIELD_CATELOG= "600000500";
        public static final String FIELD_SORT_ORDER = "700061010";
        public static final String FIELD_STATUS = "7";
        public static final String[] FIELD_IDS = new String[]{
            FIELD_DESCRIPTION, FIELD_ID, FIELD_IMAGE_TAG, FIELD_NAME, FIELD_NUMBER_OF_ITEMS};

        private SimpleEntry entry = null;
        private List<Template> templates = new ArrayList();

        public Category(SimpleEntry entry) {
            this.entry = entry;
        }
        
        public static Category[] findByCatalogName(HelperContext context, String catalogName) {
            Category[] results = new Category[0];

            String qualification = "'"+FIELD_CATELOG+"' = \""+catalogName+"\"";

            SimpleEntry[] entries = Base.find(context, FORM_NAME, qualification, FIELD_IDS);
            if (entries != null && entries.length > 0) {
                results = new Category[entries.length];
                for(int i=0;i<results.length;i++) {
                    results[i] = new Category(entries[i]);
                }
            }

            return results;
        }

        public void addTemplate(Template template) {
            templates.add(template);
        }
        public Template[] getTemplates() {
            return templates.toArray(new Template[templates.size()]);
        }
        public boolean hasTemplates() {
            return templates.size() > 0;
        }

        public String getDescription() { return entry.getEntryFieldValue(FIELD_DESCRIPTION); }
        public String getId() {return entry.getEntryFieldValue(FIELD_ID);}
        public String getName() {return entry.getEntryFieldValue(FIELD_NAME);}
    }
%>